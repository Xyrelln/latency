variables:
  GOPROXY: http://10.86.0.138:30080,direct

stages:
  # - test
  - build
  # - delivery

# Test:
#   stage: test
#   tags:
#     - pc-windows
#   before_script:
#     - '[System.Console]::OutputEncoding = [System.Console]::InputEncoding = [System.Text.Encoding]::UTF8'
#   script:
#     - echo "测试"

# CompileWin:
#   stage: build
#   tags:
#     - pc-windows
#   before_script:
#     - '[System.Console]::OutputEncoding = [System.Console]::InputEncoding = [System.Text.Encoding]::UTF8'
#   script:
#     - go install github.com/wailsapp/wails/v2/cmd/wails@latest
#     - echo $env:PATH
#     - wails build -o perftool.exe
#     - go build -o perftool-userpass.exe .\cmd\generate_userpass
#   artifacts:
#     paths:
#       - build\bin\perftool.exe
#       - perftool-userpass.exe
#     expire_in: 24 hrs

# CompileMacArm:
#   stage: build
#   tags:
#     - mac
#   script:
#     - go install github.com/wailsapp/wails/v2/cmd/wails@latest
#     - echo $env:$PATH
#     - wails build -platform darwin/arm64
#   artifacts:
#     paths:
#       - build/bin/perftool-gui.app
#     expire_in: 24 hrs

CompileMacAmd64:
  stage: build
  tags:
    - mac
  script:
    - go install github.com/wailsapp/wails/v2/cmd/wails@latest
    - echo $env:$PATH
    - wails build -platform darwin/amd64
  artifacts:
    paths:
      - build/bin/op-latency-mobile.app
    expire_in: 24 hrs

CompileWinAmd64:
  stage: build
  tags:
    - mac
  script:
    - go install github.com/wailsapp/wails/v2/cmd/wails@latest
    - echo $env:$PATH
    - wails build -platform windows/amd64 -o latency-mobile.exe
  artifacts:
    paths:
      - build/bin/latency-mobile.exe
    expire_in: 24 hrs
# PubBin:
#   stage: delivery
#   tags:
#     - pc-windows
#   before_script:
#     - '[System.Console]::OutputEncoding = [System.Console]::InputEncoding = [System.Text.Encoding]::UTF8'
#   dependencies:
#     - CompileWin
#   # when: manual
#   script:
#     - '$PERFTOOL_PKG = "perftool-win-$env:CI_COMMIT_TAG"'
#     - 'mkdir $PERFTOOL_PKG'
#     - 'cp .\build\bin\perftool.exe $PERFTOOL_PKG\'
#     - 'mkdir $PERFTOOL_PKG\adb'
#     - 'cp .\adb\win\* $PERFTOOL_PKG\adb\'
#     - 'mkdir $PERFTOOL_PKG\bin'
#     - 'cp .\bin\* $PERFTOOL_PKG\bin\'
#     - Compress-Archive -Path .\$PERFTOOL_PKG -DestinationPath .\$PERFTOOL_PKG.zip
#     - 'curl.exe -k --header "JOB-TOKEN: $env:CI_JOB_TOKEN" --upload-file .\$PERFTOOL_PKG.zip "$env:CI_API_V4_URL/projects/$env:CI_PROJECT_ID/packages/generic/perftool-$env:CI_COMMIT_TAG/$env:CI_COMMIT_TAG/$PERFTOOL_PKG.zip"'
#   only:
#     - tags

# PubMacArm:
#   stage: delivery
#   tags:
#     - mac
#   dependencies:
#     - CompileMacArm
#   variables:
#     VER: $CI_COMMIT_TAG
#   script:
#     - targetAdbPath="./build/bin/perftool-gui.app/Contents/MacOS/adb/"
#     - if [ ! -d $targetAdbPath ]; then mkdir $targetAdbPath; fi;
#     - chmod 755 ./adb/darwin/adb
#     - cp ./adb/darwin/adb ./build/bin/perftool-gui.app/Contents/MacOS/adb/
#     - cd ./build/bin/; zip -r perftool-gui-arm.zip .
#     - 'curl -k --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file perftool-gui-arm.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/perftool-${VER}/${VER}/perftool-mac-arm-${VER}.zip"'
#   only:
#     - tags

# PubMacAmd64:
#   stage: delivery
#   tags:
#     - mac
#   dependencies:
#     - CompileMacAmd64
#   variables:
#     VER: $CI_COMMIT_TAG
#   # when: manual
#   script:
#     - targetAdbPath="./build/bin/perftool-gui.app/Contents/MacOS/adb/"
#     - if [ ! -d $targetAdbPath ]; then mkdir $targetAdbPath; fi;
#     - chmod 755 ./adb/darwin/adb
#     - cp ./adb/darwin/adb ./build/bin/perftool-gui.app/Contents/MacOS/adb/
#     - cd ./build/bin/; zip -r perftool-gui-amd64.zip .
#     - 'curl -k --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file perftool-gui-amd64.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/perftool-${VER}/${VER}/perftool-mac-amd64-${VER}.zip"'
#   only:
#     - tags
