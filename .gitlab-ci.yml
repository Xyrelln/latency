variables:
  GOPROXY: http://10.86.0.138:30080,direct

stages:
  # - test
  - build
  - delivery

# Test:
#   stage: test
#   tags:
#     - pc-windows
#   before_script:
#     - '[System.Console]::OutputEncoding = [System.Console]::InputEncoding = [System.Text.Encoding]::UTF8'
#   script:
#     - echo "测试"

# CompileWin:
#   stage: build
#   tags:
#     - pc-windows
#   before_script:
#     - '[System.Console]::OutputEncoding = [System.Console]::InputEncoding = [System.Text.Encoding]::UTF8'
#   script:
#     - go install github.com/wailsapp/wails/v2/cmd/wails@latest
#     - echo $env:PATH
#     - wails build -o perftool.exe
#     - go build -o perftool-userpass.exe .\cmd\generate_userpass
#   artifacts:
#     paths:
#       - build\bin\perftool.exe
#       - perftool-userpass.exe
#     expire_in: 24 hrs

# CompileMacArm:
#   stage: build
#   tags:
#     - mac
#   script:
#     - go install github.com/wailsapp/wails/v2/cmd/wails@latest
#     - echo $env:$PATH
#     - wails build -platform darwin/arm64
#   artifacts:
#     paths:
#       - build/bin/perftool-gui.app
#     expire_in: 24 hrs

CompileMacAmd64:
  stage: build
  tags:
    - mac
  script:
    - go install github.com/wailsapp/wails/v2/cmd/wails@latest
    - echo $env:$PATH
    - wails build -platform darwin/amd64
  artifacts:
    paths:
      - build/bin/op-latency-mobile.app
    expire_in: 24 hrs

CompileWinAmd64:
  stage: build
  tags:
    - mac
  script:
    - go install github.com/wailsapp/wails/v2/cmd/wails@latest
    - echo $env:$PATH
    - wails build -platform windows/amd64 -o latency-mobile.exe -webview2 embed
  artifacts:
    paths:
      - build/bin/latency-mobile.exe
    expire_in: 24 hrs

PubBin:
  stage: delivery
  tags:
    - pc-windows
  before_script:
    - '[System.Console]::OutputEncoding = [System.Console]::InputEncoding = [System.Text.Encoding]::UTF8'
  dependencies:
    - CompileWinAmd64
  variables:
    SCRCPY_PATH: D:\github\scrcpy
    FFMPEG_PATH: D:\github\ffmpeg\bin
  script:
    - '$LATENCY_PKG = "latency-mobile-win-$env:CI_COMMIT_TAG"'
    - 'mkdir $LATENCY_PKG'
    - 'cp .\build\bin\latency-mobile.exe $LATENCY_PKG\'
    - 'mkdir $LATENCY_PKG\lib\scrcpy'
    - 'cp $env:SCRCPY_PATH\* $LATENCY_PKG\lib\scrcpy\'
    - 'mkdir $LATENCY_PKG\lib\ffmpeg'
    - 'cp $env:FFMPEG_PATH\ffmpeg.exe $LATENCY_PKG\ffmpeg\ffmpeg.exe'
    - Compress-Archive -Path .\$LATENCY_PKG -DestinationPath .\$LATENCY_PKG.zip
    - 'curl.exe -k --header "JOB-TOKEN: $env:CI_JOB_TOKEN" --upload-file .\$LATENCY_PKG.zip "$env:CI_API_V4_URL/projects/$env:CI_PROJECT_ID/packages/generic/latenct-mobile-$env:CI_COMMIT_TAG/$env:CI_COMMIT_TAG/$LATENCY_PKG.zip"'
  only:
    - tags

# PubMacArm:
#   stage: delivery
#   tags:
#     - mac
#   dependencies:
#     - CompileMacArm
#   variables:
#     VER: $CI_COMMIT_TAG
#   script:
#     - targetAdbPath="./build/bin/perftool-gui.app/Contents/MacOS/adb/"
#     - if [ ! -d $targetAdbPath ]; then mkdir $targetAdbPath; fi;
#     - chmod 755 ./adb/darwin/adb
#     - cp ./adb/darwin/adb ./build/bin/perftool-gui.app/Contents/MacOS/adb/
#     - cd ./build/bin/; zip -r perftool-gui-arm.zip .
#     - 'curl -k --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file perftool-gui-arm.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/perftool-${VER}/${VER}/perftool-mac-arm-${VER}.zip"'
#   only:
#     - tags

# PubMacAmd64:
#   stage: delivery
#   tags:
#     - mac
#   dependencies:
#     - CompileMacAmd64
#   variables:
#     VER: $CI_COMMIT_TAG
#   # when: manual
#   script:
#     - targetAdbPath="./build/bin/perftool-gui.app/Contents/MacOS/adb/"
#     - if [ ! -d $targetAdbPath ]; then mkdir $targetAdbPath; fi;
#     - chmod 755 ./adb/darwin/adb
#     - cp ./adb/darwin/adb ./build/bin/perftool-gui.app/Contents/MacOS/adb/
#     - cd ./build/bin/; zip -r perftool-gui-amd64.zip .
#     - 'curl -k --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file perftool-gui-amd64.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/perftool-${VER}/${VER}/perftool-mac-amd64-${VER}.zip"'
#   only:
#     - tags
