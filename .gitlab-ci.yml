variables:
  GOPROXY: http://10.86.0.138:30080,direct

stages:
  # - test
  - build
  - delivery

CompileMacAmd64:
  stage: build
  tags:
    - mac
  script:
    - go install github.com/wailsapp/wails/v2/cmd/wails@latest
    - echo $env:$PATH
    - wails build -platform darwin/amd64
  artifacts:
    paths:
      - build/bin/op-latency.app
    expire_in: 24 hrs

CompileWinAmd64:
  stage: build
  tags:
    - pc-windows
  before_script:
    - "[System.Console]::OutputEncoding = [System.Console]::InputEncoding = [System.Text.Encoding]::UTF8"
  script:
    - go install github.com/wailsapp/wails/v2/cmd/wails@latest
    - echo $env:PATH
    - $Version = if ( Test-Path env:CI_COMMIT_TAG ) { $env:CI_COMMIT_TAG } else { 'debug-$env:CI_COMMIT_SHORT_SHA' }
    - $CommitShortSHA = $env:CI_COMMIT_SHORT_SHA
    - $BuildTimestamp = [DateTimeOffset]::Now.ToUnixTimeSeconds()
    - $LDFLAGS = "-X 'gitlab.vrviu.com/epc/lighttest-lib/version.Version=$Version' -X 'gitlab.vrviu.com/epc/lighttest-lib/version.CommitShortSHA=$CommitShortSHA' -X 'gitlab.vrviu.com/epc/lighttest-lib/version.BuildTimastamp=$BuildTimestamp'"
    - wails build -s -platform windows/amd64 -ldflags $LDFLAGS -o latency.exe -webview2 embed
  artifacts:
    paths:
      - build/bin/latency.exe
    expire_in: 24 hrs

DocGenerate:
  image: default.registry.tke.com/vrviu/mdpdf:0.3 # 注意需配置 k8s runner
  stage: build
  script:
    - /usr/bin/python3 /usr/local/bin/mdpdf.py -f doc #  doc 表示要转换的文档目录
  artifacts:
    paths:
      - doc/*.pdf # 默认转换的pdf 在原文档目录，通过匹配进行归档
    expire_in: 1 week

PubBin:
  stage: delivery
  tags:
    - pc-windows
  before_script:
    - "[System.Console]::OutputEncoding = [System.Console]::InputEncoding = [System.Text.Encoding]::UTF8"
  dependencies:
    - CompileWinAmd64
    - DocGenerate
  variables:
    OSSUTIL: C:\Dev\ossutil64\ossutil64.exe
    OSSUTIL_CONF: C:\Dev\ossutil64\config
    OSS_BUCKET: inner-tech
    MYSQL_CLIENT: D:\mysql-8.0.30-winx64\bin\mysql.exe
    LIGHTTEST_MYSQL_HOST: 172.18.200.21
    LIGHTTEST_MYSQL_PORT: 21009
    LIB_WINDOWS_PATH: .\lib\windows
  script:
    - '$LATENCY_PKG = "latency-win-$env:CI_COMMIT_TAG"'
    - "mkdir $LATENCY_PKG"
    - 'cp .\build\bin\latency.exe $LATENCY_PKG\'
    - 'mkdir $LATENCY_PKG\lib\'
    - 'cp -r $env:LIB_WINDOWS_PATH\* $LATENCY_PKG\lib\'
    # docs
    - dir doc
    - 'cp -r .\doc\*.pdf $LATENCY_PKG\'
    # rscapture
    - 'mkdir $LATENCY_PKG\lib\rscapture'
    - 'curl.exe -k --output $LATENCY_PKG\lib\rscapture\rscapture.exe --header "PRIVATE-TOKEN: $env:EPC_TOKEN" "https://$env:CI_SERVER_HOST/api/v4/projects/895/jobs/artifacts/master/raw/target/release/rscapture-wgc.exe?job=Compile"'
    - Compress-Archive -Path .\$LATENCY_PKG\* -DestinationPath .\$LATENCY_PKG.zip
    - 'curl.exe -k --header "JOB-TOKEN: $env:CI_JOB_TOKEN" --upload-file .\$LATENCY_PKG.zip "$env:CI_API_V4_URL/projects/$env:CI_PROJECT_ID/packages/generic/latency-$env:CI_COMMIT_TAG/$env:CI_COMMIT_TAG/$LATENCY_PKG.zip"'

    - '$oss_obj_key = "lighttest/latency/$LATENCY_PKG.zip"'
    - '& $env:OSSUTIL --config-file $env:OSSUTIL_CONF cp .\$LATENCY_PKG.zip oss://$env:OSS_BUCKET/$oss_obj_key'
    - $sql_query = [string]::Format("INSERT INTO release_info (name, os, arch, version, bucket, object_key) values ('latency', 'windows', 'amd64', '{0}', '{1}', '{2}');", $env:CI_COMMIT_TAG, $env:OSS_BUCKET, $OSS_OBJ_KEY)
    - "& $env:MYSQL_CLIENT -h $env:LIGHTTEST_MYSQL_HOST -P $env:LIGHTTEST_MYSQL_PORT -uroot --password=$env:LIGHTTEST_MYSQL_PASSWORD lighttest_service -e $sql_query"
  only:
    - tags
# PubMacArm:
#   stage: delivery
#   tags:
#     - mac
#   dependencies:
#     - CompileMacArm
#   variables:
#     VER: $CI_COMMIT_TAG
#   script:
#     - targetAdbPath="./build/bin/perftool-gui.app/Contents/MacOS/adb/"
#     - if [ ! -d $targetAdbPath ]; then mkdir $targetAdbPath; fi;
#     - chmod 755 ./adb/darwin/adb
#     - cp ./adb/darwin/adb ./build/bin/perftool-gui.app/Contents/MacOS/adb/
#     - cd ./build/bin/; zip -r perftool-gui-arm.zip .
#     - 'curl -k --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file perftool-gui-arm.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/perftool-${VER}/${VER}/perftool-mac-arm-${VER}.zip"'
#   only:
#     - tags

# PubMacAmd64:
#   stage: delivery
#   tags:
#     - mac
#   dependencies:
#     - CompileMacAmd64
#   variables:
#     VER: $CI_COMMIT_TAG
#   # when: manual
#   script:
#     - targetAdbPath="./build/bin/perftool-gui.app/Contents/MacOS/adb/"
#     - if [ ! -d $targetAdbPath ]; then mkdir $targetAdbPath; fi;
#     - chmod 755 ./adb/darwin/adb
#     - cp ./adb/darwin/adb ./build/bin/perftool-gui.app/Contents/MacOS/adb/
#     - cd ./build/bin/; zip -r perftool-gui-amd64.zip .
#     - 'curl -k --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file perftool-gui-amd64.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/perftool-${VER}/${VER}/perftool-mac-amd64-${VER}.zip"'
#   only:
#     - tags
